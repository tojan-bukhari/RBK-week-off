//=============================================== 1// write a function called addOne that takes an array of numbers as an input, // and returns a new array with all array elements incremented by one as an output// Note : solve this question using while loop // addOne( [1,2,3,4] ) ==> [2,3,4,5]// addOne( [3,6,9] ) ==> [4,7,10] function addOne(array) {	var i = 0;	var result = [];	while(i<array.length){		result.push(array[i]+1)		i++;	}    // TODO: your code here    return result}//=============================================== 2//write a function called firstNElements that takes two Parameters as an input an array of numbers  and a number n, // and returns a new array with the first n elements only// Note : solve this question using For loop // firstNElement( [1,2,3,4],2 ) ==> [1,2]// firstNElement( [], 3 ) ==> []// firstNElement( [5,6,8,9,12], 9 ) ==> [5,6,8,9,12]function firstNElement(array, n){	return array.slice(0,n-1)  // TODO: your code here}//=============================================== 3//write a function called objectKeys that takes  an Object as an input, // and returns an array with all object propreties (keys)// Note : do not use Object.Keys() method //var student = {// name : "David Rayy",// cohort : 9,// year : 2020 };// objectKeys(student) ==> ["name" ,"cohort", "year"]function objectKeys(object){	var kyes = [];	for (var key in object){		keys.push(key)	}  // TODO: your code here  return kyes;}//=============================================== 4// Write a function called isItExpensive that takes an object as parameter,// You can assume this object always has a price property. // Your function should behave as follows: // it should check the value of price.// If that value is less than 100, return false.// If the value is greater than or equal to 100, return true.// However, if the value is null, return the string "no data".// var appleWatch = {price: 400}// var applesAndWatches = {price: 30}// var watchingApples = {price: null}// isItExpensive(appleWatch);       ==> true// isItExpensive(applesAndWatches); ==> false// isItExpensive(watchingApples);   ==>"no data"function isItExpensive(item) {	if(item.price<100)		return false	else if(item.price>=100)		return true	else(item.price===null)		return "no data"	    // TODO: your code here}//=============================================== 5// Write a function called arrayInfo that takes an array and returns a string with the following information: the length of the array,// the last index value of the array in a properly formatted string.// You can assume the input array will always have at least 1 element.//arrayInfo(["apple", "banana", "cranberry"]);   ==> "Length: 3, index of last element: 2"//arrayInfo([5, 10, 15, 20, 25, 30]);  ==> "Length: 6, index of last element: 5"//arrayInfo([true]);  ==> "Length: 1, index of last element: 0"function arrayInfo(arr){	return "Length:"+" "+arr.length+",index of last element:"+" "+arr.length-1    // TODO: your code here}//=============================================== 6// Write a function called removePartyKillers that takes an array of objects as parameter like "playlist" (see below) // and returns a copy of that playlist where any song longer than 8 minutes has been removed.// Each object will have the properties title, artist, and durationInSeconds./*var awesomePlaylist = [  {    title: "Hay Day",    artist: "Robo-Crop",    durationInSeconds: 378  }, {    title: "10,000 Pounds",    artist: "L-Ton Jonn",    durationInSeconds: 498,  }, {    title: "Caesar's Salad",    artist: "DJ Dinner Julius",    durationInSeconds: 600,  }, {    title: "The British Are On Their Way",    artist: "Raul Pevere",    durationInSeconds: 1095,  }, {    title: "13th",    artist: "The Doctors",    durationInSeconds: 185,  }];function removePartyKillers(playlist) {}removePartyKillers(awesomePlaylist);Would return:[  {    title: "Hay Day",    artist: "Robo-Crop",    durationInSeconds: 378  }, {    title: "13th",    artist: "The Doctors",    durationInSeconds: 185,  }]*/ function removePartyKillers(playlist) { 	var party=[]; 	for(var i = 0; i < playlist.length; i++){ 		if (playlist[i].durationInSeconds <= 480){ 			party.push(playlist[i]) 		} 	} 	return party    // TODO: your code here }//=============================================== 7//Using recursion, Write a function that takes a string  as parameter and returns the number of vowels in that string.//Note:Five of the 26 alphabet letters are vowels: A, E, I, O, and U.//countVowels("four score and seven years") ==> 9;//countVowels("rbk") ==> 0     var sum = 0	var i = 0function countVowels(string) {	i--		if (string[i]==="a" || string[i]==="e" || string[i]==="i" || string[i]==="o" || string[i]==="u"){			sum++			return sum		}	return string.slice(0) + countVowels(string)    // TODO: your code here}//=============================================== 8//Short Answer Theoretical Questions://In your own words, no more than 3 sentences, answer the following: //Q1: What is the difference between an Array and an Object?//Write your answer here.//Q2: When accessing object properties, what is the difference between dot notation and bracket notation?//Write your answer here.//Q3:What does the typeof operator do?//Write your answer here.//Q4:How do we add a property to an object?//Write your answer here.  //Good Luck :))